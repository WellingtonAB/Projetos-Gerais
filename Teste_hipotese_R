#Coloque o seu diretório

#setwd("C:/FCD/BigDataRAzure/Cap11")
#getwd()


# Pacotes
library("dplyr")
library('nycflights13')
library('ggplot2')
library('dplyr')
library('nycflights13')

pop_data <- na.omit(flights) %>%
              filter(carrier == 'UA' | carrier == 'DL', arr_delay >= 0) %>%
              select(carrier, arr_delay) %>%
              group_by(carrier) %>%
              sample_n(17000) %>%
              ungroup()
  
  


amostra1 <- na.omit(flights) %>%
  filter(carrier == 'UA', arr_delay >= 0) %>%
  select(carrier, arr_delay) %>%
  mutate(sample_id = '1') %>%
  sample_n(1000)

amostra2 <- na.omit(flights) %>%
  filter(carrier == 'DL', arr_delay >= 0) %>%
  select(carrier, arr_delay) %>%
  mutate(sample_id = '2') %>%
  sample_n(1000)


amostras <- rbind(amostra1,amostra2)

#############################################################################

#Inicio do IC e teste de hipótese

#############################################################################

#Faça o tratamento da base e os devidos filtros criando uma amostra devido ao tamanho dos dados.

#amostra1 <- "coloque a 1ª base de dados aqui."
#amostra2 <- "coloque a 2ª base de dados aqui."



#Coloque a variável que gostaria de saber o intervalo de confiança 
#e o teste de hipótese na 2ª coluna.

funcao <- function(x){
  
  x[,2] = as.numeric(unlist(x[,2]))
  # Erro padrão
  erro_padrao_amostra = sd(unlist(x[,2])) / sqrt(nrow(x))
  
  # Limites inferior e superior
  # 1.96 é o valor de z score para 95% de confiança
  
  inferior = mean(unlist(x[,2])) - 1.96*erro_padrao_amostra
  
  superior = mean(unlist(x[,2])) + 1.96*erro_padrao_amostra

  intervalo <- list(inferior,superior)
  
  intervalo2 <- paste0("IC entre ",round(intervalo[[1]],2)," e ",round(intervalo[[2]],2),". ", "Além da média ser ", round(mean(unlist(x[,2])),2),".")
  
  return(intervalo2)
}


# Intervalo de confiança

funcao(amostra1)
funcao(amostra2)


# Escolha o tipo de teste t:
#Opções: 
#[1] two.sided  (H1 é diferente)
#[2] greater (H1 é maior)
#[3] less (H1 é menor)

escolhido = 2
escolha <- ifelse(escolhido == 1,"two.sided",ifelse(escolhido == 2,"greater","less"))

t.test(amostra1[,2],amostra2[,2],alternative=escolha)








